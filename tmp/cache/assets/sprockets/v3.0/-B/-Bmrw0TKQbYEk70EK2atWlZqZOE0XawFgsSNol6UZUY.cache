{:uriI"ñfile://app/assets/global/plugins/codemirror/mode/haskell/index.html?type=text/html&id=69f228f0957d4cedd19277e2908e6d9da2115e863a8252b91c2ff69e8c549ee7:ET:load_pathI"app/assets/global;T:filenameI"Aapp/assets/global/plugins/codemirror/mode/haskell/index.html;T:	nameI"*plugins/codemirror/mode/haskell/index;T:logical_pathI"/plugins/codemirror/mode/haskell/index.html;T:content_typeI"text/html;T:sourceI"(	<!doctype html>
<title>CodeMirror: Haskell mode</title>
<meta charset="utf-8" />
<link rel=stylesheet href="../../doc/docs.css">
<link rel="stylesheet" href="../../lib/codemirror.css">
<link rel="stylesheet" href="../../theme/elegant.css">
<script src="../../lib/codemirror.js"></script>
<script src="../../addon/edit/matchbrackets.js"></script>
<script src="haskell.js"></script>
<style type="text/css">
    .CodeMirror {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }
</style>
<div id=nav>
    <a href="http://codemirror.net">
        <h1>CodeMirror</h1>
        <img id=logo src="../../doc/logo.png">
    </a>
    <ul>
        <li>
            <a href="../../index.html">Home</a>
            <li>
                <a href="../../doc/manual.html">Manual</a>
                <li>
                    <a href="https://github.com/codemirror/codemirror">Code</a>
    </ul>
    <ul>
        <li>
            <a href="../index.html">Language modes</a>
            <li>
                <a class=active href="#">Haskell</a>
    </ul>
</div>
<article>
    <h2>Haskell mode</h2>
    <form>
        <textarea id="code" name="code"> module UniquePerms ( uniquePerms ) where -- | Find all unique permutations of a list where there might be duplicates. uniquePerms :: (Eq a) => [a] -> [[a]] uniquePerms = permBag . makeBag -- | An unordered collection where duplicate values are
            allowed, -- but represented with a single value and a count. type Bag a = [(a, Int)] makeBag :: (Eq a) => [a] -> Bag a makeBag [] = [] makeBag (a:as) = mix a $ makeBag as where mix a [] = [(a,1)] mix a (bn@(b,n):bs) | a == b = (b,n+1):bs |
            otherwise = bn : mix a bs permBag :: Bag a -> [[a]] permBag [] = [[]] permBag bs = concatMap (\(f,cs) -> map (f:) $ permBag cs) . oneOfEach $ bs where oneOfEach [] = [] oneOfEach (an@(a,n):bs) = let bs' = if n == 1 then bs else (a,n-1):bs
            in (a,bs') : mapSnd (an:) (oneOfEach bs) apSnd f (a,b) = (a, f b) mapSnd = map . apSnd </textarea>
    </form>
    <script>
        var editor = CodeMirror.fromTextArea(document.getElementById("code"),
        {
            lineNumbers: true,
            matchBrackets: true,
            theme: "elegant"
        });
    </script>
    <p>
        <strong>MIME types defined:</strong> <code>text/x-haskell</code>.</p>
</article>;T:metadata{	:dependencieso:Set:
@hash}
I"environment-version;TTI"environment-paths;TTI"rails-env;TTI"2processors:type=text/html&file_type=text/html;TTI"Ofile-digest://app/assets/global/plugins/codemirror/mode/haskell/index.html;TTF:charsetI"
utf-8;F:digest"%C±cúC≠—∑>:–…pømñ'M˛nöç,V•´$ê¥Ω:lengthi(	:dependencies_digest"%ìÉ˚ü 
[®=´!„Ø|–µZ˙f9©^Ï≈œ\gñœ¸:idI"E69f228f0957d4cedd19277e2908e6d9da2115e863a8252b91c2ff69e8c549ee7;F:
mtimel+^ØÚW