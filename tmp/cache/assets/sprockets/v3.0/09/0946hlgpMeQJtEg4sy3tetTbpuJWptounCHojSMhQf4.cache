{:uriI"ïfile://app/assets/global/plugins/codemirror/mode/kotlin/index.html?type=text/html&id=c343587fc76b4aa9f1168ff71c7e311b08895c2a48d61d95ac3e79ef960a0e7e:ET:load_pathI"app/assets/global;T:filenameI"@app/assets/global/plugins/codemirror/mode/kotlin/index.html;T:	nameI")plugins/codemirror/mode/kotlin/index;T:logical_pathI".plugins/codemirror/mode/kotlin/index.html;T:content_typeI"text/html;T:sourceI"Ï
<!doctype html>
<title>CodeMirror: Kotlin mode</title>
<meta charset="utf-8" />
<link rel=stylesheet href="../../doc/docs.css">
<link rel="stylesheet" href="../../lib/codemirror.css">
<script src="../../lib/codemirror.js"></script>
<script src="kotlin.js"></script>
<style type="text/css">
    .CodeMirror {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }
</style>
<div id=nav>
    <a href="http://codemirror.net">
        <h1>CodeMirror</h1>
        <img id=logo src="../../doc/logo.png">
    </a>
    <ul>
        <li>
            <a href="../../index.html">Home</a>
            <li>
                <a href="../../doc/manual.html">Manual</a>
                <li>
                    <a href="https://github.com/codemirror/codemirror">Code</a>
    </ul>
    <ul>
        <li>
            <a href="../index.html">Language modes</a>
            <li>
                <a class=active href="#">Kotlin</a>
    </ul>
</div>
<article>
    <h2>Kotlin mode</h2>
    <div>
        <textarea id="code" name="code"> package org.wasabi.http import java.util.concurrent.Executors import java.net.InetSocketAddress import org.wasabi.app.AppConfiguration import io.netty.bootstrap.ServerBootstrap import io.netty.channel.nio.NioEventLoopGroup import io.netty.channel.socket.nio.NioServerSocketChannel
            import org.wasabi.app.AppServer public class HttpServer(private val appServer: AppServer) { val bootstrap: ServerBootstrap val primaryGroup: NioEventLoopGroup val workerGroup: NioEventLoopGroup { // Define worker groups primaryGroup = NioEventLoopGroup()
            workerGroup = NioEventLoopGroup() // Initialize bootstrap of server bootstrap = ServerBootstrap() bootstrap.group(primaryGroup, workerGroup) bootstrap.channel(javaClass
            <NioServerSocketChannel>()) bootstrap.childHandler(NettyPipelineInitializer(appServer)) } public fun start(wait: Boolean = true) { val channel = bootstrap.bind(appServer.configuration.port)?.sync()?.channel() if (wait) { channel?.closeFuture()?.sync() } } public
                fun stop() { // Shutdown all event loops primaryGroup.shutdownGracefully() workerGroup.shutdownGracefully() // Wait till all threads are terminated primaryGroup.terminationFuture().sync() workerGroup.terminationFuture().sync() } } </textarea>
    </div>
    <script>
        var editor = CodeMirror.fromTextArea(document.getElementById("code"),
        {
            mode:
            {
                name: "kotlin"
            },
            lineNumbers: true,
            indentUnit: 4
        });
    </script>
    <h3>Mode for Kotlin (http://kotlin.jetbrains.org/)</h3>
    <p>Developed by Hadi Hariri (https://github.com/hhariri).</p>
    <p>
        <strong>MIME type defined:</strong> <code>text/x-kotlin</code>.</p>
</article>;T:metadata{	:dependencieso:Set:
@hash}
I"environment-version;TTI"environment-paths;TTI"rails-env;TTI"2processors:type=text/html&file_type=text/html;TTI"Nfile-digest://app/assets/global/plugins/codemirror/mode/kotlin/index.html;TTF:charsetI"
utf-8;F:digest"%òHdA	˘¥(˚]¯∫Õçwn8ü?È)Ätá≥ä⁄:lengthiÏ
:dependencies_digest"%úA|áıÏ	ˆXµz@]V¡=àõ/ÁÓ®`Ù»√‰):idI"Ec343587fc76b4aa9f1168ff71c7e311b08895c2a48d61d95ac3e79ef960a0e7e;F:
mtimel+^ØÚW