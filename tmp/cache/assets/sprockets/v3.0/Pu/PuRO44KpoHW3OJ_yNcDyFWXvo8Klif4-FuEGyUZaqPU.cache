{:uriI"îfile://app/assets/global/plugins/codemirror/mode/julia/index.html?type=text/html&id=17570d717e62988e1a5276d18906c5549e7fd68bc0a01794ee41b0764e081675:ET:load_pathI"app/assets/global;T:filenameI"?app/assets/global/plugins/codemirror/mode/julia/index.html;T:	nameI"(plugins/codemirror/mode/julia/index;T:logical_pathI"-plugins/codemirror/mode/julia/index.html;T:content_typeI"text/html;T:sourceI"˙
<!doctype html>
<title>CodeMirror: Julia mode</title>
<meta charset="utf-8" />
<link rel=stylesheet href="../../doc/docs.css">
<link rel="stylesheet" href="../../lib/codemirror.css">
<script src="../../lib/codemirror.js"></script>
<script src="julia.js"></script>
<style type="text/css">
    .CodeMirror {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }
</style>
<div id=nav>
    <a href="http://codemirror.net">
        <h1>CodeMirror</h1>
        <img id=logo src="../../doc/logo.png">
    </a>
    <ul>
        <li>
            <a href="../../index.html">Home</a>
            <li>
                <a href="../../doc/manual.html">Manual</a>
                <li>
                    <a href="https://github.com/codemirror/codemirror">Code</a>
    </ul>
    <ul>
        <li>
            <a href="../index.html">Language modes</a>
            <li>
                <a class=active href="#">Julia</a>
    </ul>
</div>
<article>
    <h2>Julia mode</h2>
    <div>
        <textarea id="code" name="code"> #numbers 1234 1234im .234 .234im 2.23im 2.3f3 23e2 0x234 #strings 'a' "asdf" r"regex" b"bytestring" """ multiline string """ #identifiers a as123 function_name! #unicode identifiers # a = x\ddot a‚Éó = xÃà # a = v\dot a‚Éó = vÃá #F\vec = m \cdotp a\vec
            F‚Éó = m¬∑a‚Éó #literal identifier multiples 3x 4[1, 2, 3] #dicts and indexing x=[1, 2, 3] x[end-1] x={"julia"=>"language of technical computing"} #exception handling try f() catch @printf "Error" finally g() end #types immutable Color{T
            <:Number}
                r::T g::T b::T end #functions function change!(x::Vector{Float64}) for i=1 :length(x) x[i] *=2 end end #function invocation f( 'b', (2, 3)...) #operators |=&=^=\ - %=*=+=-=<=>= != == % * + -
                <> ! = | & ^ \ ? ~ : $
                    <: .< .>
                        << <<=>> >>>> >>= >>>=
                            <<=< <<=. <=.>= .== -> // in ... // := .//= .*= ./= .^= .%= .+= .-= \= \\= || === && |= .|=
                                <:>: |>
                                    <| :: x ? y : z #macros @spawnat 2 1+1 @eval(:x) #keywords and operators if else elseif while for begin let end do try catch finally return break continue global local const export import importall using function macro
                                        module baremodule type immutable quote true false enumerate </textarea>
    </div>
    <script>
        var editor = CodeMirror.fromTextArea(document.getElementById("code"),
        {
            mode:
            {
                name: "julia",
            },
            lineNumbers: true,
            indentUnit: 4,
            matchBrackets: true
        });
    </script>
    <p>
        <strong>MIME types defined:</strong> <code>text/x-julia</code>.</p>
</article>;T:metadata{	:dependencieso:Set:
@hash}
I"environment-version;TTI"environment-paths;TTI"rails-env;TTI"2processors:type=text/html&file_type=text/html;TTI"Mfile-digest://app/assets/global/plugins/codemirror/mode/julia/index.html;TTF:charsetI"
utf-8;F:digest"%ÏÚ√ÅPz¯N ﬁ6ıé√?‰ÿ_≤Öæé+¸%ÅM€j:lengthi˙
:dependencies_digest"%ﬁUHv¢1˛º≥|{8fvT°_-•õîa¿‹.$b∆:idI"E17570d717e62988e1a5276d18906c5549e7fd68bc0a01794ee41b0764e081675;F:
mtimel+^ØÚW